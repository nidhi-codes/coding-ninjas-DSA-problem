#include <bits/stdc++.h> 

    int partition (vector<int>& arr, int low, int high)
    {
       // Your code here
       
       int pivot = arr[low];
       int count = 0;
       
       for(int i=low+1; i<high+1; i++){
            if(arr[i] <= pivot){
                count++;
            }   
       }
       
       int pivotIndex = low+count;
       
       swap(arr[low], arr[pivotIndex]);
       
       int i = low;
       int j = high;
       
       while(i<pivotIndex && j>pivotIndex){
           
           while(arr[i] <= pivot && i<pivotIndex){
               i++;
           }
           while(arr[j] > pivot &&j>pivotIndex){
               j--;
           }
           
           if(arr[i] > pivot && arr[j] <= pivot){
               swap(arr[i], arr[j]);
               i++;
               j--;
           }
           
           
       }
       
       return low+count;
    }

    void sort(vector<int>& arr, int low, int high){
        if(low>=high){
            return;
        }
        
        int p = partition(arr, low, high);
        
        sort(arr, low, p-1);
        sort(arr, p+1, high);
    }

    vector<int> quickSort(vector<int> arr)
    {
    // Write your code here.

    sort(arr, 0, arr.size()-1);
    return arr;

        
        
    }
