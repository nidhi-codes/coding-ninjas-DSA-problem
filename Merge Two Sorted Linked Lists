#include <bits/stdc++.h>

/************************************************************

    Following is the linked list node structure.
    
    template <typename T>
    class Node {
        public:
        T data;
        Node* next;

        Node(T data) {
            next = NULL;
            this->data = data;
        }

        ~Node() {
            if (next != NULL) {
                delete next;
            }
        }
    };

************************************************************/

void merge(Node<int>* first, Node<int>* second){

    Node<int>* curr1 = first;
    Node<int>* next1 = curr1->next;

    Node<int>* curr2 = second;
    Node<int>* next2 = NULL;

    if(next1 == NULL){
        curr1->next = curr2;
    }
    
    while(next1 != NULL && curr2 != NULL){

        if(curr2->data >= curr1->data && curr2->data <= next1->data){

            //node addition
            curr1->next = curr2;
            next2 = curr2->next;
            curr2->next = next1;

            //updating pointer
            curr1 = curr2;
            curr2 = next2;

        }

        else{

            curr1 = curr1->next;
            next1 = next1->next;

            if(next1 == NULL){
                curr1->next = curr2;
            }

        }
    }

}

Node<int>* sortTwoLists(Node<int>* first, Node<int>* second)
{
    // Write your code here.

    if(first->data <= second->data){
        merge(first, second);
        return first;
    }

    else{
        merge(second, first);
        return second;
    }

    
    

}
