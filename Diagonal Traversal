#include <bits/stdc++.h> 
/*************************************************************
    Following is the Binary Tree node structure.
    
    class BinaryTreeNode {
      public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left){
                delete left;
            }
            if (right){
                delete right;
            }
        }
    };
*************************************************************/

void recursion(BinaryTreeNode<int>* root, map<int, vector<int>>& value, int hd){
    
    if(root == NULL){
        return;
    }
    
    value[hd].push_back(root->data);
    

    recursion(root->left, value, hd+1);
    recursion(root->right, value, hd);
    
}

vector<int> diagonalPath(BinaryTreeNode<int>* root) {
    
    vector<int> ans;
    map<int, vector<int>> value;
    int hd = 0;
    
    recursion(root, value, hd);
    
    for(auto i : value){
        
        for(auto j : i.second){
            ans.push_back(j);
        }
    }
    
    return ans;
}
