#include <bits/stdc++.h> 
// Following is the Binary Tree node structure
/**************
class BinaryTreeNode {
    public : 
    T data;
    BinaryTreeNode<T> *left;
    BinaryTreeNode<T> *right;

    BinaryTreeNode(T data) {
        this -> data = data;
        left = NULL;
        right = NULL;
    }
    
};
***************/

void recursion(BinaryTreeNode<int>* root, vector<int>& inorder){

    if(root == NULL){
        return;
    }

    recursion(root->left, inorder);
    inorder.push_back(root->data);
    recursion(root->right, inorder);
    
}

bool twoSumInBST(BinaryTreeNode<int>* root, int target) {
	
    vector<int> inorder;
    
    recursion(root, inorder);

    int len = inorder.size();
    int i=0;
    int j=len-1;

    while(i<j){

        int sum = inorder[i]+inorder[j];

        if(sum == target){
            return true;
        }

        else if(sum<target){
            i++;
        }

        else{
            j--;
        }
    }

    return false;
}
