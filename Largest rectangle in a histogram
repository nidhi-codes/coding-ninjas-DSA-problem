#include<stack>
   
    vector<int> nextSmallerElement(vector<int> arr, int n)
    {
        vector<int> ans(n);

        stack<int> st;
        st.push(-1);

        for(int i=n-1; i>=0; i--){

            while(st.top() != -1 && arr[st.top()] >= arr[i]){
                st.pop();
            }

            ans[i] = st.top();
            st.push(i);

        }

        return ans;
    }

    vector<int> prevSmallerElement(vector<int> arr, int n)
    {
        vector<int> ans(n);

        stack<int> st;
        st.push(-1);

        for(int i=0; i<n; i++){
            
            while(st.top() != -1 && arr[st.top()] >= arr[i]){
                st.pop();
            }

            ans[i] = st.top();
            st.push(i);

        }

        return ans;
    }

    int largestRectangle(vector < int > & heights) {
    // Write your code here.

        int len = heights.size();

        vector<int> next = nextSmallerElement(heights, len);

        vector<int> prev = prevSmallerElement(heights, len);
         
        int area = -1;

        for(int i=0; i<len; i++){

            if(next[i] == -1){
                next[i] = len;
            }

            int l = heights[i];
            int b = next[i] - prev[i] - 1;

            area = max(area, l*b);
        }

        return area;
    }
