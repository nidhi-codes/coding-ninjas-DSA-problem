#include <bits/stdc++.h> 
vector<int> spiralPathMatrix(vector<vector<int>> matrix, int n, int m) 
{
    // Write your code here.

        vector<int> ans;

        int noOfElement = n*m;
        int count = 0;

        int rowStartingIndex = 0;
        int rowEndingIndex = n-1;
        int colStartingIndex = 0;
        int colEndingIndex = m-1;


        while(count<noOfElement){
            
            if(count<noOfElement){
                for(int i = colStartingIndex; i<=colEndingIndex; i++){
                    ans.push_back(matrix[rowStartingIndex][i]);
                    count++;
                }
                rowStartingIndex++;
            }
            
            if(count<noOfElement){
                for(int i = rowStartingIndex; i<=rowEndingIndex; i++){
                    ans.push_back(matrix[i][colEndingIndex]);
                    count++;
                }
                colEndingIndex--;  
            }
                      

            if(count<noOfElement){
                for(int i = colEndingIndex; i>=colStartingIndex; i--){
                    ans.push_back(matrix[rowEndingIndex][i]);
                    count++;
                }
                rowEndingIndex--;
            }
            
            if(count<noOfElement){
                for(int i = rowEndingIndex; i>=rowStartingIndex; i--){
                    ans.push_back(matrix[i][colStartingIndex]);
                    count++;
                }
                colStartingIndex++;
            }
        }
        return ans;
}
