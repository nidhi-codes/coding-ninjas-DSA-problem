#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

LinkedListNode<int>* middleNode(LinkedListNode<int>* head){
        
        LinkedListNode<int>* slow = head;
        LinkedListNode<int>* fast = head->next;
        
        while(fast != NULL && fast->next != NULL){
            slow = slow->next;
            fast = fast->next->next;
        }
        
        return slow;
}
    
LinkedListNode<int>* reverse(LinkedListNode<int>* head){
        
        LinkedListNode<int>* prev = NULL;
        LinkedListNode<int>* curr = head;
        LinkedListNode<int>* forward = NULL;
        
        while(curr != NULL){
            
            forward = curr->next;
            curr->next = prev;
            prev = curr;
            curr = forward;
        }
        
        return prev;
}

bool isPalindrome(LinkedListNode<int> *head) {
    // Write your code here.

        if(head == NULL || head->next == NULL){
            return true;
        }
        
        LinkedListNode<int>* mid = middleNode(head);
        
        LinkedListNode<int>* temp = mid->next;
        mid->next = reverse(temp);
        
        LinkedListNode<int>* curr1 = head;
        LinkedListNode<int>* curr2 = mid->next;
        
        
        while(curr2 != NULL){
            
            if(curr1->data != curr2->data){
                return false;
            }
            
            curr1 = curr1->next;
            curr2 = curr2->next;
        }
        
        return true;

}
