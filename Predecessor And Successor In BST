/*************************************************************

    Following is the Binary Tree node structure
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };

*************************************************************/

pair<int, int> predecessorSuccessor(TreeNode *root, int key)
{
        TreeNode* temp = root;
        
        int predVal = -1;
        int succVal = -1;

        while(temp && temp->data != key){

            if(temp->data > key){
                succVal = temp->data;
                temp = temp->left;
            }

            else{
                predVal = temp->data;
                temp = temp->right;
            }
        }
        
        if(temp){
     
            TreeNode* pred = temp->left;
            while (pred != NULL) {
                predVal = pred->data;
                pred = pred->right;
            }
       
            TreeNode* succ = temp->right;
            while (succ != NULL) {
                succVal = succ->data;
                succ = succ->left;
            }

        
        }

       
        return {predVal, succVal};
}
