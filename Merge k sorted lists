/*
Following is the class structure of the Node class:

class Node
{
public:
    int data;
    Node *next;
    Node()
    {
        this->data = 0;
        next = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->next = NULL;
    }
    Node(int data, Node* next)
    {
        this->data = data;
        this->next = next;
    }
};
*/
#include<queue>
class compare{
    public:
        bool operator()(Node* a, Node* b){
            return a->data > b->data;
        }
};

Node* mergeKLists(vector<Node*> &arr){
    // Write your code here.

            int k = arr.size();

            priority_queue<Node*, vector<Node*>, compare>q;
           
           for(int i=0; i<k; i++){
               if(arr[i] != NULL){
                   q.push(arr[i]);
               }
           }
           
           Node* head = NULL;
           Node* tail = NULL;
           
           while(q.size() > 0){
               
               Node* temp = q.top();
               q.pop();
               
               if(head == NULL){
                   head = temp;
                   tail = temp;
               }
               
               else{
                   tail->next = temp;
                   tail = tail->next;
               }
               
               
               if(temp->next != NULL){
                   q.push(temp->next);
               }
           }
           
           return head;
}
