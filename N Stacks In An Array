#include <bits/stdc++.h> 
class NStack
{

    int *arr;
    int *top;
    int *next;
    int freespot;

    int n;    //no. of stack
    int s;   // size of array

public:
    // Initialize your data structure.
    NStack(int N, int S)
    {
        
        n = N;
        s = S;

        freespot = 0;

        arr = new int[s];
        next = new int[s];
        top = new int[n];

        for(int i=0; i<s-1; i++){
            next[i] = i+1;
        }
        next[s-1] = -1;

        for(int i=0; i<n; i++){
            top[i] = -1;
        }
    }

    // Pushes 'X' into the Mth stack. Returns true if it gets pushed into the stack, and false otherwise.
    bool push(int x, int m)
    {

        if(freespot == -1){
            return false;
        }

        //1. find index
        int index = freespot;

        //2. update freespot
        freespot = next[index];

        //3. insert element
        arr[index] = x;

        //4. update next
        next[index] = top[m-1];

        //5. update top
        top[m-1] = index;

        return true;


    }

    // Pops top element from Mth Stack. Returns -1 if the stack is empty, otherwise returns the popped element.
    int pop(int m)
    {
        
        if(top[m-1] == -1){
            return -1;
        }

        //1. find index
        int index = top[m-1];

        //2. update top
        top[m-1] = next[index];

        //3. update next
        next[index] = freespot;

        //4. update freespot
        freespot = index;

        return arr[index];
    }
};
