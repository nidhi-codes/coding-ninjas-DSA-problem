/*
 * Definition for linked list.
 * class Node {
 *  public:
 *		int data;
 *		Node *next;
 * 		Node *random;
 *		Node() : data(0), next(nullptr), random(nullptr){};
 *		Node(int x) : data(x), next(nullptr), random(nullptr) {}
 *		Node(int x, Node *next, Node *random) : data(x), next(next), random(random) {}
 * };
 */

#include<unordered_map>

Node *cloneLL(Node *head){
	// Write your code here

	 	Node* cloneHead = NULL;
        Node* cloneTail = NULL;
        
        
        Node* temp = head;
        
        while(temp){
            
            Node* newNode = new Node(temp->data);

            if(cloneHead == NULL){
                cloneHead = newNode;
                cloneTail = newNode;
            }
            
            else{
                cloneTail->next = newNode;
                cloneTail = newNode;
            }
            temp = temp->next;
        }
        
        
        temp = head;
        Node* temp1 = cloneHead;
        
        unordered_map<Node*, Node*> mapping;
        
        while(temp){
            mapping[temp] = temp1;
            temp = temp->next;
            temp1 = temp1->next;
            
        }
        
        temp = head;
        temp1 = cloneHead;
        
        while(temp){
            temp1->random = mapping[temp->random];
            temp = temp->next;
            temp1 = temp1->next;
        }
        
        return cloneHead;
        
}
