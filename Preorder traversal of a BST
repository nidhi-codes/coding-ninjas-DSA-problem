#include <bits/stdc++.h> 
/*
    Following is the class structure of BinaryTreeNode class for referance:

    class BinaryTreeNode {
       public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left){
                delete left;
            }
            if (right){
                delete right;
            }
        }
    };
*/

BinaryTreeNode<int>* recursion(vector<int>& pre, int& i, int min, int max){
    
    if((i >= pre.size()) || (pre[i] < min) || (pre[i] > max)){
        return NULL;
    }

    BinaryTreeNode<int>* root = new BinaryTreeNode<int> (pre[i++]);
    root->left = recursion(pre, i, min, root->data);
    root->right = recursion(pre, i, root->data, max);
    return root;

   
}
BinaryTreeNode<int>* preorderToBST(vector<int> &preorder) {
    
    int min = INT_MIN;
    int max = INT_MAX;
    int i=0;
    return recursion(preorder, i, min, max);

}
